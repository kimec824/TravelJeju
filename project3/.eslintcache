[{"C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\index.js":"1","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\reportWebVitals.js":"2","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\App.js":"3","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\Survey_header.js":"4","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\Questionbox.js":"5","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\Result.js":"6","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\TravelPage.js":"7","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\utils\\storeApi.js":"8","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\utils\\store.js":"9","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\TopBar.js":"10","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\ContentCard.js":"11","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\List\\List.js":"12","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\MapCard.js":"13","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\Card.js":"14","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\List\\Title.js":"15","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\Home.js":"16"},{"size":501,"mtime":1611071276493,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611071276587,"results":"19","hashOfConfig":"18"},{"size":750,"mtime":1611074071245,"results":"20","hashOfConfig":"18"},{"size":300,"mtime":1611078610449,"results":"21","hashOfConfig":"18"},{"size":4984,"mtime":1611078621651,"results":"22","hashOfConfig":"18"},{"size":9692,"mtime":1611073303175,"results":"23","hashOfConfig":"18"},{"size":8042,"mtime":1611078649865,"results":"24","hashOfConfig":"18"},{"size":68,"mtime":1611071277020,"results":"25","hashOfConfig":"18"},{"size":608,"mtime":1611071276999,"results":"26","hashOfConfig":"18"},{"size":633,"mtime":1611078728046,"results":"27","hashOfConfig":"18"},{"size":2244,"mtime":1611078222499,"results":"28","hashOfConfig":"18"},{"size":1419,"mtime":1611071276951,"results":"29","hashOfConfig":"18"},{"size":1535,"mtime":1611077894500,"results":"30","hashOfConfig":"18"},{"size":735,"mtime":1611071276784,"results":"31","hashOfConfig":"18"},{"size":1745,"mtime":1611071276973,"results":"32","hashOfConfig":"18"},{"size":306,"mtime":1611075765601,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"udnelk",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"36"},"C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\index.js",[],["79","80"],"C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\reportWebVitals.js",[],"C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\App.js",["81","82","83","84","85","86","87"],"import Questionbox from './Questionbox';\nimport React, { useEffect, useState } from 'react';\nimport Survey_header from './Survey_header';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Result from './Result';\nimport TravelPage from './TravelPage/TravelPage';\nimport axios from 'axios';\nimport Home from './Home';\n\n\nfunction App() {\n  const [region, setregion] = useState(\"aewol\");\n  var tmpregion = \"aewol\"\n  \n\n  \n\n  return (\n    <div className=\"App\">\n     <Router>\n     <Switch>\n          <Route path=\"/plan\">\n          <TravelPage region = {tmpregion}/>\n          </Route>\n\n          <Route path= \"/\">\n            <Home/>\n          </Route>\n\n        </Switch>\n     </Router>\n    </div>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\Survey_header.js",[],"C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\Questionbox.js",["88","89","90"],"import React,{useState} from 'react'\nimport ReactDOM from 'react-dom';\nimport './questionbox.css'\nimport axios from 'axios'\nimport Radio from '@material-ui/core/Radio';\nimport { BrowserRouter as Router,Route,Link } from 'react-router-dom';\nimport Result from './Result.js'\n\n\nfunction Questionbox(){\n    const [q1,setQ1] = useState(\"one\");\n    const [q2,setQ2] = useState(\"one\");\n    const [q3,setQ3] = useState(\"one\");\n    const [q4,setQ4] = useState(\"one\");\n    const axios=require('axios');\n\n    const q1checked=(e)=>\n    {\n        /*console.log(q1)\n        console.log(e.target.value)\n        if(e.target.value===\"one\")\n        setQ1(\"two\");\n        else if(e.target.value===\"two\")\n        setQ1(\"one\")*/\n        setQ1(e.target.value)\n    }\n    const q2checked=(e)=>\n    { \n        /*if(e.target.value===\"one\")\n        setQ2(\"two\");\n        else if(e.target.value===\"two\")\n        setQ2(\"one\")*/\n        setQ2(e.target.value)\n    }\n    const q3checked=(e)=>\n    {\n        /*if(e.target.value===\"one\")\n        setQ3(\"two\");\n        else if(e.target.value===\"two\")\n        setQ3(\"one\")*/\n        setQ3(e.target.value)\n    }\n    const q4checked=(e)=>\n    { \n        /*if(e.target.value===\"one\")\n        setQ4(\"two\");\n        else if(e.target.value===\"two\")\n        setQ4(\"one\")*/\n        setQ4(e.target.value)\n    }\n\n    const json={\n        q1:q1,\n        q2:q2,\n        q3:q3,\n        q4:q4\n    }\n\n    const Submit = async() => {\n       await axios.delete('http://192.249.18.249:3000/surveyresult');\n        console.log(json);\n       await axios.post(\n            'http://192.249.18.249:3000/surveyresult',\n            json,\n            {\n                headers:{'Content-Type':'application/json'}\n            }\n        ).then((res)=>{\n            console.log(res);\n        }).catch(error=>{\n            console.log(error);\n        });\n         \n        document.location.href=\"/result\"\n        \n    }\n    return(\n<div>\n    <Router>\n        <div className='questionbox'>\n            <h2>나는 제주도에서 운전을 할 수 </h2>\n                <div>\n                <span>있다.</span>\n                <Radio \n                value=\"one\"\n                checked={q1===\"one\"} \n                color=\"primary\" \n                onChange={q1checked}\n                />\n                \n                </div>\n                <div>\n                <span>없다.</span>\n                <Radio \n                value=\"two\"\n                checked={q1===\"two\"} \n                color=\"primary\" \n                onChange={q1checked}\n                />\n                </div>\n\n\n            <h2>나는 여행을...</h2>\n                <div>\n                <span>가족 단위로 갈 것이다.</span>\n                <Radio \n                value=\"one\" \n                checked={q2===\"one\"} \n                color=\"primary\" \n                onChange={q2checked}\n                />\n                </div>\n                <div>\n                <span>혼자, 혹은 애인과 함께 갈 것이다.</span>\n                <Radio \n                value=\"two\" \n                checked={q2===\"two\"} \n                color=\"primary\" \n                onChange={q2checked}\n                />\n                </div>\n\n            <h2>나는 제주도에서 주로</h2>\n                <div>\n                <span>방에 콕 박혀서 낮잠을 잘 것이다.</span>\n                <Radio \n                value=\"one\" \n                checked={q3===\"one\"} \n                color=\"primary\" \n                onChange={q3checked}\n                />\n                </div>\n                <div>\n                <span>여기저기 돌아다니며 여행을 즐길 것이다.</span>\n                <Radio \n                value=\"two\" \n                checked={q3===\"two\"} \n                color=\"primary\" \n                onChange={q3checked}\n                />\n                </div>\n\n            <h2>내가 좋아하는 장소는...</h2>\n                <div>\n                <span>인스타 핫플로 유명한 카페, 소품샵이다.</span>\n                <Radio \n                value=\"one\"\n                checked={q4===\"one\"} \n                color=\"primary\" \n                onChange={q4checked}\n                />\n                </div>\n                <div>\n                <span>탁 트인 산과 바다이다.</span>\n                <Radio \n                value=\"two\"\n                checked={q4===\"two\"} \n                color=\"primary\" \n                onChange={q4checked}\n                />\n                </div> \n\n                <div>\n                    <button className='submitbutton' onClick={Submit}>설문지 제출</button>\n                <br/><br/>\n\n                </div>\n                <Route path=\"/result\">\n                    <Result/>\n                </Route>\n            </div>\n        </Router>        \n</div>\n        \n    );\n    \n}\n\n//ReactDOM.render(<BrowserRouter><Questionbox/></BrowserRouter>,document.getElementById('root'));\n\nexport default Questionbox;","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\Result.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React,{useState} from 'react'\nimport ReactDOM from 'react-dom';\nimport './result.css'\nimport axios from 'axios'\nimport { BrowserRouter,Route } from 'react-router-dom';\n\n\nfunction Result(){\n    const [q1,setQ1] = useState(\"one\")\n    const [q2,setQ2] = useState(\"one\")\n    const [q3,setQ3] = useState(\"one\")\n    const [q4,setQ4] = useState(\"one\")\n    var data = null;\n    const Data= axios.get('http://192.249.18.249:3000/surveyresult').then((response)=>{\n        data = response.data.mySurveyresult;\n    setQ1(data.q1);\n    setQ2(data.q2);\n    setQ3(data.q3);\n    setQ4(data.q4);\n    });\n    var json=null;\nconst goNextPage=async()=>{\n    await axios.delete('http://192.249.18.249:3000/region');\n    //region post하기\n    await axios.post(\n        'http://192.249.18.249:3000/region',\n        json,\n        {\n            headers:{'Content-Type':'application/json'}\n        }\n    ).then((res)=>{\n        console.log(res);\n    }).catch(error=>{\n        console.log(error);\n    });\n    document.location.href='/plan'\n}\n    switch(q1){\n        case \"one\":\n            switch(q2){\n                case \"one\":\n                    switch(q3){\n                        case \"one\":\n                            switch(q4){\n                                case \"one\":  { json={\"region\":\"aewol\"}\n                                                return(<div><div className='resultbox'><h5>당신에게 어울리는 제주도의 여행지는 \"애월읍\"입니다.</h5> </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                                }   \n                                case \"two\": { json={\"region\":\"seoguipo\"}\n                                                return(<div><div className='resultbox'>당신에게 어울리는 제주도의 여행지는 \"서귀포시\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }\n                            }\n                        case \"two\":\n                            switch(q4){\n                                case \"one\": {  json={\"region\":\"pyosun\"}\n                                                 return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"표선면\"입니다. </div>\n                                                 <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }           \n                                case \"two\": {  json={\"region\":\"jocheon\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"조천읍\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }       \n                            }\n                    }\n                case \"two\":\n                    switch(q3){\n                        case \"one\":\n                            switch(q4){\n                                case \"one\": {  json={\"region\":\"aewol\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"애월읍\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }       \n                                case \"two\": { json={\"region\":\"seoguipo\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"서귀포시\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                             }\n                            }\n                        case \"two\":\n                            switch(q4){\n                                case \"one\": { json={\"region\":\"pyosun\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"표선면\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }   \n                                case \"two\": {json={\"region\":\"jocheon\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"조천읍\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }\n                            }\n                    }\n            }\n        case \"two\":\n            switch(q2){\n                case \"one\":\n                    switch(q3){\n                        case \"one\":\n                            switch(q4){\n                                case \"one\": { json={\"region\":\"weoljung\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"월정리\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }\n                                case \"two\": { json={\"region\":\"hanlim\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"한림읍\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }\n                            }\n                        case \"two\":\n                            switch(q4){\n                                case \"one\":  {json={\"region\":\"woodo\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"우도\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }\n                                case \"two\": {json={\"region\":\"jeju\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"제주시\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }\n                            }\n                    }\n                case \"two\":\n                    switch(q3){\n                        case \"one\":\n                            switch(q4){\n                                case \"one\": { json={\"region\":\"weoljung\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"월정리\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }\n                                case \"two\": { json={\"region\":\"hanlim\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"한림읍\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }\n                            }\n                        case \"two\":\n                            switch(q4){\n                                case \"one\": { json={\"region\":\"woodo\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"우도\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }\n                                case \"two\": {  json={\"region\":\"jeju\"}\n                                                return(<div><div className='resultbox'><br/><br/>당신에게 어울리는 제주도의 여행지는 \"제주시\"입니다. </div>\n                                                <button className='nextPageMessage'onClick={goNextPage}><br/>여행지 정보 <br/>보러가기</button></div>);\n                                            }\n                            }\n                    }\n            }\n    }\n}\n\n export default Result;","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\TravelPage.js",["117","118","119","120","121","122","123","124"],"import React, { useEffect, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport List from './components/List/List';\nimport store from './utils/store';\nimport StoreApi from './utils/storeApi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport TopBar from './components/TopBar';\nimport MapCard from './components/MapCard';\nimport axios from 'axios';\nimport Geocode from 'react-geocode';\nimport {Marker} from 'google-maps-react';\nimport {Button} from '@material-ui/core';\nimport ContentCard from './components/ContentCard';\nimport {Link} from \"react-router-dom\";\nimport './travelpage.css'\n\nconst useStyle = makeStyles((theme) => ({\n  rooty: {\n    minHeight: '100vh',\n    width: '100%',\n    overflowY: 'auto',\n  },\n  listContainer: {\n    display: 'flex',\n  },\n}));\nvar flag = 0;\n\nGeocode.setApiKey('AIzaSyDLTqNLX9015_waYN7su_aK_OgZIu3g5Fk');\nGeocode.enableDebug();\nGeocode.setRegion(\"kr\");\n\n\nexport default function TravelPage(region) {\n  \n  const [collect, setcollect] = useState(\"전체\");\n  const [card, setCard] = useState([]);\n  const [data, setData] = useState(store);\n  const [open, setOpen] = useState(false);\n  const [locations, setLocations] = useState([{ name: \"\", location: { lat: 0, lng: 0}}]);\n  var defaultlist = [];\n  var Region = \"\";\n  var cnt = {lat : 0, lng : 0};\n\n\n  useEffect (async ()=> {\n\n  var region =\"\";\n  await axios.get('http://192.249.18.249:3000/getregion')\n         .then(response=> {\n          region = response.data.region;\n          console.log(response.data.region);\n          console.log(region);\n         })\n  await axios\n          .get('http://192.249.18.249:3000/get'+ region+'/')\n          .then(response => {\n            setCard(response.data)\n          }) \n          \n  }, []);\n  \n\n\n  const [backgroundUrl, setBackgroundUrl] = useState('');\n  const classes = useStyle();\n\n\n  const GoogleMap = async (currentAddr) => {\n    return Geocode.fromAddress(currentAddr)\n      .then( response => {\n        const { lat, lng } = response.results[0].geometry.location;\n        return {lat, lng}\n      })\n      .catch(err => console.log(err))\n  }\n\n  \n\n  const googloe = async(currentAddr)=>{\n    const {lat, lng} = await GoogleMap(currentAddr);\n    const tmplocation = {name : \"\", location:{lat:lat, lng: lng}}\n    setLocations([...locations, tmplocation]);\n    console.log(\"setstate\")\n    console.log(locations);\n  }\n\n  const allclicked = ()=> {\n    setcollect(\"전체\");\n    flag = 2;\n    console.log(\"전체로 바뀜!\");\n  }\n  const foodclicked = ()=> {\n    setcollect(\"음식점\");\n    flag = 2;\n  }\n  const homeclicked = ()=> {\n    setcollect(\"숙박\");\n    flag = 2;\n  }\n  const tripclicked = ()=> {\n    setcollect(\"관광지\");\n    flag = 2;\n  }\n\n\n  const addMoreCard = (title, listId) => {\n    console.log(title, listId);\n\n    \n    const newCardId = uuid();\n    const newCard = {\n      id: newCardId,\n      title,\n    };\n    \n\n    const list = data.lists[listId];\n    list.cards = [...list.cards, newCard];\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n\n  const addMoreList = (title) => {\n    const newListId = uuid();\n    const newList = {\n      id: newListId,\n      title,\n      cards: [],\n    };\n    const newState = {\n      listIds: [...data.listIds, newListId],\n      lists: {\n        ...data.lists,\n        [newListId]: newList,\n      },\n    };\n    setData(newState);\n  };\n\n  const updateListTitle = (title, listId) => {\n    const list = data.lists[listId];\n    list.title = title;\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n    console.log('destination', destination, 'source', source, draggableId);\n\n    if (!destination) {\n      return;\n    }\n    if (type === 'list') {\n      const newListIds = data.listIds;\n      newListIds.splice(source.index, 1);\n      newListIds.splice(destination.index, 0, draggableId);\n      return;\n    }\n\n    const sourceList = data.lists[source.droppableId];\n    const destinationList = data.lists[destination.droppableId];\n    const draggingCard = sourceList.cards.filter(\n      (card) => card.id === draggableId\n    )[0];\n\n    if (source.droppableId === destination.droppableId) {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n      const newSate = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: destinationList,\n        },\n      };\n      setData(newSate);\n    } else {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n      const currentAddr = \"제주\" + draggingCard.contentname;\n//\n      \n      googloe(currentAddr);\n       const newState = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: sourceList,\n          [destinationList.id]: destinationList,\n        },\n      };\n      setData(newState);\n    }\n  };\n\n\n\n  return (\n    <StoreApi.Provider value={{ addMoreCard, addMoreList, updateListTitle }}>\n      <div\n        className={classes.rooty}\n        style={{\n          backgroundImage: `url(${backgroundUrl})`,\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          fontFamily:'BMHANNAAir',\n        }}\n      >\n        \n       \n        <Link to = '/' style ={{textDecoration: 'none'}}>\n            <TopBar setOpen={setOpen}/>\n        </Link>\n       \n        <table className='table'>\n          <td><MapCard  className='map' locationarray = {locations}\n          {...console.log(\"here!\")}\n          {...console.log(region)}\n          {...console.log(cnt)}/></td>\n          <td >\n          <div class=\"buttonGroup\">\n          <Button className='classfication' onClick={allclicked}>전체</Button>\n          <Button  className='classfication'onClick={foodclicked}>음식점</Button>\n          <Button className='classfication' onClick={homeclicked}>숙박</Button>\n          <Button  className='classfication'onClick={tripclicked}>관광지</Button>\n          </div>\n        <DragDropContext  onDragEnd={onDragEnd}>\n          <Droppable  droppableId=\"app\" type=\"list\" direction=\"horizontal\">\n            {(provided) => (\n              <div\n                className={classes.listContainer}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {data.listIds.map((listId, index) => {\n                  const list = data.lists[listId];\n                  \n                  if(listId === 'list-2' && flag !==4){\n                    var i, j\n                    for(j = 0; j<(list.cards.length*1000);j++){\n                      list.cards.pop();\n                    }\n                    console.log(list.cards);\n                    if(collect === '전체'){\n                      console.log(collect);\n                      for(i=0;i<card.length;i++){\n                          list.cards[i] = card[i];\n                          list.cards[i].id = 'card-' + i;\n                      }\n                    }\n                    else{\n                      console.log(collect);\n                      for(i=0;i<card.length;i++){\n                        if(card[i].content ==collect){\n                          list.cards[i] = card[i];\n                          list.cards[i].id = 'card-' + i;\n                        }\n                          \n                      }\n                    }\n                    flag += 1;\n                  }\n                  return <List className=\"list\" list={list} key={listId} index={index} />;\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        </td>\n        </table>\n        \n      </div>\n    </StoreApi.Provider>\n  );\n}","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\utils\\storeApi.js",[],"C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\utils\\store.js",["125"],"const cards = [\n    {\n      id: 'card-1',\n      title: 'Learning how to cook',\n      sub: 'subtitle',\n    },\n    {\n      id: 'card-2',\n      title: 'Making sandwich',\n      sub: 'subtitle',\n    },\n    {\n      id: 'card-3',\n      title: 'Taking the trash out',\n      sub: 'subtitle',\n    },\n  ];\n  \n  const data = {\n    lists: {\n      'list-1': {\n        id: 'list-1',\n        title: '나의 여행지',\n        cards : [] ,\n      },\n      'list-2': {\n        id: 'list-2',\n        title: '여행지 목록',\n        cards : []\n      },\n    },\n    listIds: ['list-1', 'list-2'],\n  };\n  \n  export default data;","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\TopBar.js",["126","127","128"],"import React from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './topbar.css'\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: theme.spacing(2),\n    border: 0,\n    outline:0,\n  },\n  title: {\n    fontSize: '1.2rem',\n    color: 'black',\n    fontWeight: 'bold',\n    flexGrow: 1,\n    border: 0,\n    outline:0\n  },\n}));\n\nexport default function TopBar({ setOpen }) {\n  //const classes = useStyle();\n  return (\n    <div>\n      <h1  className='planTitle'>My jeju trip plan</h1>\n    </div>\n  );\n}","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\ContentCard.js",["129"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Draggable} from 'react-beautiful-dnd';\nimport {Link} from 'react-router-dom';\n\nconst useStyles = makeStyles({\nrooti: {\n    width:'500px',\n    minWidth: '500px',\n},\n\nbullet: {\ndisplay: 'inline-block',\nmargin: '0 2px',\ntransform: 'scale(0.8)',\n},\ntitle: {\nfontSize: 14,\ncolor:'rgb(10, 19, 99)',\n},\ncontent:{\n    fontWeight:700,\nfontFamily:'BMHANNAAir',\ncolor:'rgb(10, 19, 99)',\n},\nscore:{\n\n    fontFamily:'BMHANNAAir',\n    color:'rgb(10, 19, 99)',\n    fontSize:18,\n},\npos: {\nmarginBottom: 12,\n},\nbutton:{\n    color:'rgb(10, 19, 99)',\n    marginTop:'-15px',\n}\n});\n\nexport default function ContentCard({card, index}) {\nconst classes = useStyles();\n//const bull = <span className={classes.bullet}>•</span>;\n\nreturn (\n    <Draggable draggableId = {card.id} index = {index} >\n        {(provided) =>(\n            <div \n            ref={provided.innerRef}\n            {...provided.dragHandleProps}\n            {...provided.draggableProps}\n            >\n            <Card className={classes.rooti}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        {card.content}\n                    </Typography>\n                    <Typography variant=\"h5\" className={classes.content} component=\"h2\">\n                        {card.contentname}\n                    </Typography>\n                    <Typography variant=\"body2\" className={classes.score} component=\"p\">\n                        인기점수 :{card.score} 점\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button className={classes.button} size=\"small\" onClick ={()=> window.open('https://www.visitjeju.net/kr/detail/view?contentsid='+ card.contentid, '_blank')}>More</Button>\n                </CardActions>\n            </Card>    \n            </div>\n        )}\n    </Draggable>\n    );\n}","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\List\\List.js",["130","131","132"],"import React from 'react';\nimport { Paper, Typography, CssBaseline } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from './Title';\nimport Card from '../Card';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport ContentCard from '../ContentCard';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    minWidth: '300px',\n    backgroundColor: '#EBECF0',\n    paddingTop:'15px',\n    marginLeft: theme.spacing(1),\n  },\n  cardContainer: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    paddingBottom: theme.spacing(2),\n  },\n}));\nexport default function List({ list, index }) {\n  const classes = useStyle();\n  return (\n        <div>\n          <Paper className={classes.root}>\n            <CssBaseline />\n            <Title title={list.title} listId={list.id} />\n            <Droppable droppableId={list.id}>\n              {(provided) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  className={classes.cardContainer}\n                >\n                  {list.cards.map((card, index) => (\n                    <ContentCard key={card.id} card={card} index={index} />\n                  ))}\n                  {provided.placeholder}\n                  \n                </div>\n              )}\n            </Droppable>\n          </Paper>\n        </div>\n  );\n}","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\MapCard.js",["133","134","135","136","137","138"],"import React from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nconst locations =[];\nconst lastlocations = [];\n// {\n//   name: \"Location 1\",\n//   location: { \n//     lat: 33.365, lng: 126.56\n//   },\n// },\n\nconst MapCard = (locationarray) => {\n\n\n  const addlocations = (locationarray) =>{\n    var i;\n    locations.push(locationarray);\n    console.log(locations)\n\n  }\n\n  const mapStyles = {        \n    height: 500,\n    width: 700\n  };\n  \n  const defaultCenter = {\n    lat: 33.365, lng: 126.56\n  }\n  \n  const addMarkers = async (e, aug, lat, lng) => {\n    // console.log(aug);\n    const {stores} = this.state;\n    let stateData = stores;\n    let latLng;\n    latLng = {lat, lng};\n    stateData.push(latLng);\n    await this.setState({\n      stores: stateData\n    });\n  }\n  const displayMarkers = (lat, lng) => {\n    return this.state.stores.map((store, index) => {\n      return <Marker key={index} id={index} position={lat, lng}  />\n    })\n  }\n  return (\n     <LoadScript\n       googleMapsApiKey='AIzaSyDLTqNLX9015_waYN7su_aK_OgZIu3g5Fk'>\n        <GoogleMap\n          mapContainerStyle={mapStyles}\n          zoom={10}\n          center={defaultCenter} \n        >\n\n          {\n            locations.unshift(locationarray.locationarray)\n          }\n          {\n            locations[0].map(item => {\n                return (\n                <Marker key={item.name} position={item.location}/>\n                )\n              })\n        }\n        </GoogleMap>\n     </LoadScript>\n  )\n}\n\nexport default MapCard;","C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\Card.js",[],"C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\TravelPage\\components\\List\\Title.js",["139"],"import React, { useState, useContext } from 'react';\nimport { Typography, InputBase } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport storeApi from '../../utils/storeApi';\n\nconst useStyle = makeStyles((theme) => ({\n  editableTitleContainer: {\n\n    margin: theme.spacing(1),\n    color:'rgb(10, 19, 99)',\n    fontFamily:'BMHANNAAir',\n    display: 'flex',\n    marginTop:'10px',\n  },\n  editableTitle: {\n    flexGrow: 1,\n    fontSize: '1.2rem',\n    fontFamily:'BMHANNAAir',\n    fontWeight: 'bold',\n  },\n  input: {\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n    margin: theme.spacing(1),\n    '&:focus': {\n      background: '#ddd',\n    },\n  },\n}));\nexport default function Title({ title, listId }) {\n  const [open, setOpen] = useState(false);\n  const [newTitle, setNewTitle] = useState(title);\n  const { updateListTitle } = useContext(storeApi);\n  const classes = useStyle();\n  const handleOnChange = (e) => {\n    setNewTitle(e.target.value);\n  };\n\n  const handleOnBlur = () => {\n    updateListTitle(newTitle, listId);\n    setOpen(false);\n  };\n  return (\n    <div>\n      {open ? (\n        <div>\n          <InputBase\n            onChange={handleOnChange}\n            autoFocus\n            value={newTitle}\n            inputProps={{\n              className: classes.input,\n            }}\n            fullWidth\n            onBlur={handleOnBlur}\n          />\n        </div>\n      ) : (\n        <div className={classes.editableTitleContainer}>\n          <Typography  \n            onClick={() => setOpen(!open)}\n            className={classes.editableTitle}\n          >\n            {title}\n          </Typography>\n        </div>\n      )}\n    </div>\n  );\n}",["140","141"],"C:\\Users\\q\\Documents\\GitHub\\madcamp_proj3\\project3\\src\\Home.js",["142"],"import React from 'react'\r\nimport Survey_header from './Survey_header';\r\nimport Questionbox from './Questionbox';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div {...console.log(\"qqq\")}>\r\n            <Survey_header/>\r\n            <Questionbox/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":19},{"ruleId":"147","severity":1,"message":"151","line":2,"column":17,"nodeType":"149","messageId":"150","endLine":2,"endColumn":26},{"ruleId":"147","severity":1,"message":"152","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":21},{"ruleId":"147","severity":1,"message":"153","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":14},{"ruleId":"147","severity":1,"message":"154","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":13},{"ruleId":"147","severity":1,"message":"155","line":12,"column":10,"nodeType":"149","messageId":"150","endLine":12,"endColumn":16},{"ruleId":"147","severity":1,"message":"156","line":12,"column":18,"nodeType":"149","messageId":"150","endLine":12,"endColumn":27},{"ruleId":"147","severity":1,"message":"157","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":16},{"ruleId":"147","severity":1,"message":"154","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":13},{"ruleId":"147","severity":1,"message":"158","line":6,"column":40,"nodeType":"149","messageId":"150","endLine":6,"endColumn":44},{"ruleId":"147","severity":1,"message":"157","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":16},{"ruleId":"147","severity":1,"message":"159","line":5,"column":10,"nodeType":"149","messageId":"150","endLine":5,"endColumn":23},{"ruleId":"147","severity":1,"message":"160","line":5,"column":24,"nodeType":"149","messageId":"150","endLine":5,"endColumn":29},{"ruleId":"147","severity":1,"message":"161","line":14,"column":11,"nodeType":"149","messageId":"150","endLine":14,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":38,"column":5,"nodeType":"164","messageId":"165","endLine":145,"endColumn":6},{"ruleId":"162","severity":1,"message":"163","line":40,"column":13,"nodeType":"164","messageId":"165","endLine":91,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":42,"column":21,"nodeType":"164","messageId":"165","endLine":65,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":44,"column":29,"nodeType":"164","messageId":"165","endLine":53,"endColumn":30},{"ruleId":"166","severity":1,"message":"167","line":54,"column":25,"nodeType":"168","messageId":"169","endLine":64,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":55,"column":29,"nodeType":"164","messageId":"165","endLine":64,"endColumn":30},{"ruleId":"166","severity":1,"message":"167","line":66,"column":17,"nodeType":"168","messageId":"169","endLine":90,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":67,"column":21,"nodeType":"164","messageId":"165","endLine":90,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":69,"column":29,"nodeType":"164","messageId":"165","endLine":78,"endColumn":30},{"ruleId":"166","severity":1,"message":"167","line":79,"column":25,"nodeType":"168","messageId":"169","endLine":89,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":80,"column":29,"nodeType":"164","messageId":"165","endLine":89,"endColumn":30},{"ruleId":"166","severity":1,"message":"167","line":92,"column":9,"nodeType":"168","messageId":"169","endLine":144,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":93,"column":13,"nodeType":"164","messageId":"165","endLine":144,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":95,"column":21,"nodeType":"164","messageId":"165","endLine":118,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":97,"column":29,"nodeType":"164","messageId":"165","endLine":106,"endColumn":30},{"ruleId":"166","severity":1,"message":"167","line":107,"column":25,"nodeType":"168","messageId":"169","endLine":117,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":108,"column":29,"nodeType":"164","messageId":"165","endLine":117,"endColumn":30},{"ruleId":"166","severity":1,"message":"167","line":119,"column":17,"nodeType":"168","messageId":"169","endLine":143,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":120,"column":21,"nodeType":"164","messageId":"165","endLine":143,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":122,"column":29,"nodeType":"164","messageId":"165","endLine":131,"endColumn":30},{"ruleId":"166","severity":1,"message":"167","line":132,"column":25,"nodeType":"168","messageId":"169","endLine":142,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":133,"column":29,"nodeType":"164","messageId":"165","endLine":142,"endColumn":30},{"ruleId":"147","severity":1,"message":"170","line":12,"column":9,"nodeType":"149","messageId":"150","endLine":12,"endColumn":15},{"ruleId":"147","severity":1,"message":"171","line":14,"column":8,"nodeType":"149","messageId":"150","endLine":14,"endColumn":19},{"ruleId":"147","severity":1,"message":"172","line":40,"column":10,"nodeType":"149","messageId":"150","endLine":40,"endColumn":14},{"ruleId":"147","severity":1,"message":"173","line":42,"column":7,"nodeType":"149","messageId":"150","endLine":42,"endColumn":18},{"ruleId":"147","severity":1,"message":"174","line":43,"column":7,"nodeType":"149","messageId":"150","endLine":43,"endColumn":13},{"ruleId":"175","severity":1,"message":"176","line":47,"column":14,"nodeType":"177","endLine":62,"endColumn":4},{"ruleId":"147","severity":1,"message":"178","line":66,"column":25,"nodeType":"149","messageId":"150","endLine":66,"endColumn":41},{"ruleId":"179","severity":1,"message":"180","line":271,"column":44,"nodeType":"181","messageId":"182","endLine":271,"endColumn":46},{"ruleId":"147","severity":1,"message":"183","line":1,"column":7,"nodeType":"149","messageId":"150","endLine":1,"endColumn":12},{"ruleId":"147","severity":1,"message":"184","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":20},{"ruleId":"147","severity":1,"message":"185","line":2,"column":22,"nodeType":"149","messageId":"150","endLine":2,"endColumn":28},{"ruleId":"147","severity":1,"message":"186","line":6,"column":7,"nodeType":"149","messageId":"150","endLine":6,"endColumn":15},{"ruleId":"147","severity":1,"message":"158","line":9,"column":9,"nodeType":"149","messageId":"150","endLine":9,"endColumn":13},{"ruleId":"147","severity":1,"message":"184","line":2,"column":17,"nodeType":"149","messageId":"150","endLine":2,"endColumn":27},{"ruleId":"147","severity":1,"message":"187","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":12},{"ruleId":"147","severity":1,"message":"188","line":6,"column":21,"nodeType":"149","messageId":"150","endLine":6,"endColumn":30},{"ruleId":"147","severity":1,"message":"189","line":4,"column":7,"nodeType":"149","messageId":"150","endLine":4,"endColumn":20},{"ruleId":"147","severity":1,"message":"190","line":15,"column":9,"nodeType":"149","messageId":"150","endLine":15,"endColumn":21},{"ruleId":"147","severity":1,"message":"191","line":16,"column":9,"nodeType":"149","messageId":"150","endLine":16,"endColumn":10},{"ruleId":"147","severity":1,"message":"192","line":31,"column":9,"nodeType":"149","messageId":"150","endLine":31,"endColumn":19},{"ruleId":"147","severity":1,"message":"193","line":42,"column":9,"nodeType":"149","messageId":"150","endLine":42,"endColumn":23},{"ruleId":"194","severity":1,"message":"195","line":44,"column":58,"nodeType":"196","messageId":"197","endLine":44,"endColumn":59},{"ruleId":"147","severity":1,"message":"198","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":21},{"ruleId":"143","replacedBy":"199"},{"ruleId":"145","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":8,"column":13,"nodeType":"203","endLine":8,"endColumn":29},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'Questionbox' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Survey_header' is defined but never used.","'Result' is defined but never used.","'axios' is defined but never used.","'region' is assigned a value but never used.","'setregion' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Link' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Data' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Marker' is defined but never used.","'ContentCard' is defined but never used.","'open' is assigned a value but never used.","'defaultlist' is assigned a value but never used.","'Region' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'setBackgroundUrl' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'cards' is assigned a value but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'useStyle' is assigned a value but never used.","'Card' is defined but never used.","'Draggable' is defined but never used.","'lastlocations' is assigned a value but never used.","'addlocations' is assigned a value but never used.","'i' is defined but never used.","'addMarkers' is assigned a value but never used.","'displayMarkers' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'MoreHorizIcon' is defined but never used.",["204"],["205"],"react/jsx-pascal-case","Imported JSX component Survey_header must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-global-assign","no-unsafe-negation"]